%{

=head1 SYNOPSIS

See the grammar in file C<confusing.eyp> first.

This example illustrates how to solve the conflict using 
the postponed conflict resolution technique.

Compile the grammar with:

                 eyapp -b '' confusingsolveddynamic.eyp

and execute it with:

                ./confusingsolveddynamic.pm -t

=head1 SEE ALSO
 
=over 2

=item * The grammar in file C<confusing.eyp> 

=item * http://www.cs.man.ac.uk/~pjj/cs2121/ho/node19.html

=cut

use base q{DebugTail}; 
%}

%semantic token 'c' 'd' 'f' 'x' 'y'
%expect 0 1

%tree

%%
A: 
    %name Bcd
    B 'c' 'd' 
  | %name Ecf
    E 'c' 'f' 
;
B:  %name B
    'x' 'y'  xyconflict
;
E:  %name E
    'x' 'y'  xyconflict
;

xyconflict:
      /* empty. Just to solve the reduce-reduce conflict */
      {
        my $self = shift;

        if (${$self->input()} =~ m{^.*?d}) {
          $self->YYSetReduce('c', 'B' );
        }
        else {
          $self->YYSetReduce('c', 'E' ); 
        }
      }
;

%%

unless (caller) {
  my $prompt = 'Try "x y c d" or "x y c f" and press <CR><CTRL-D>: ';
  __PACKAGE__->main($prompt)
}
