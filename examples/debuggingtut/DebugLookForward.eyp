/*VIM: set ts=2 */
# See http://search.cpan.org/perldoc?Parse::Eyapp::debuggingtut
# See also: Debug.eyp Debug1.eyp Debug2.eyp 
%token D S
%token SEMICOLONS SEMICOLOND

%{
our $VERSION = '0.01';
%}

%%
p:
    ds SEMICOLONS ss  
  | ss
;

ds:
    D SEMICOLOND ds   
  | D       
    {
      print "Reducing by rule:\n";
      print "\tds -> D\n";
      $_[1];
    }
;

ss:
    S SEMICOLONS ss     
  | S       
;

%%

my $tokenline = 1;

sub _Error {
  my $parser = shift;
  my ($token) = $parser->YYCurval;
  my ($what) = $token ? "input: '$token'" : "end of input";
  die "Syntax error near $what line num $tokenline\n";
}

my $input;

sub _Lexer {
  
  for ($input) {
     s{^(\s+)}{} and $tokenline += $1 =~ tr{\n}{};
     return ('',undef) unless $_;

     return ($1,$1) if s/^([sSDd])//;
     return ('SEMICOLOND', 'SEMICOLOND') if s/^;\s*D/D/;
     return ('SEMICOLONS', 'SEMICOLONS') if s/^;\s*S/S/;
     die "Syntax error at line num $tokenline:".substr($_,0,10)."\n";
  }
  return ('',undef);
}

sub Run {
  my ($self) = shift;
  
  $input = shift;
  
  return $self->YYParse( yylex => \&_Lexer, yyerror => \&_Error,
                         #yydebug => 0x1F
  );
}
