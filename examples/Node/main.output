Conflicts:
----------
Conflict in state 15 between rule 5 and token '-' resolved as reduce.
Conflict in state 15 between rule 5 and token '*' resolved as shift.
Conflict in state 15 between rule 5 and token '+' resolved as reduce.
Conflict in state 15 between rule 5 and token '/' resolved as shift.
Conflict in state 16 between rule 6 and token '-' resolved as reduce.
Conflict in state 16 between rule 6 and token '*' resolved as reduce.
Conflict in state 16 between rule 6 and token '+' resolved as reduce.
Conflict in state 16 between rule 6 and token '/' resolved as reduce.
Conflict in state 17 between rule 4 and token '-' resolved as reduce.
Conflict in state 17 between rule 4 and token '*' resolved as shift.
Conflict in state 17 between rule 4 and token '+' resolved as reduce.
Conflict in state 17 between rule 4 and token '/' resolved as shift.
Conflict in state 18 between rule 7 and token '-' resolved as reduce.
Conflict in state 18 between rule 7 and token '*' resolved as reduce.
Conflict in state 18 between rule 7 and token '+' resolved as reduce.
Conflict in state 18 between rule 7 and token '/' resolved as reduce.
Conflict in state 20 between rule 11 and token '-' resolved as shift.
Conflict in state 20 between rule 11 and token '*' resolved as shift.
Conflict in state 20 between rule 11 and token '+' resolved as shift.
Conflict in state 20 between rule 11 and token '/' resolved as shift.

Rules:
------
0:	$start -> line $end
1:	PLUS-1 -> PLUS-1 ';' exp
2:	PLUS-1 -> exp
3:	line -> PLUS-1
4:	exp -> exp '+' exp
5:	exp -> exp '-' exp
6:	exp -> exp '*' exp
7:	exp -> exp '/' exp
8:	exp -> NUM
9:	exp -> '(' exp ')'
10:	exp -> VAR
11:	exp -> VAR '=' exp

States:
-------
State 0:

	$start -> . line $end	(Rule 0)

	'('	shift, and go to state 3
	NUM	shift, and go to state 1
	VAR	shift, and go to state 4

	exp	go to state 2
	line	go to state 6
	PLUS-1	go to state 5

State 1:

	exp -> NUM .	(Rule 8)

	$default	reduce using rule 8 (exp)

State 2:

	PLUS-1 -> exp .	(Rule 2)
	exp -> exp . '+' exp	(Rule 4)
	exp -> exp . '-' exp	(Rule 5)
	exp -> exp . '*' exp	(Rule 6)
	exp -> exp . '/' exp	(Rule 7)

	'*'	shift, and go to state 8
	'+'	shift, and go to state 9
	'-'	shift, and go to state 7
	'/'	shift, and go to state 10

	$default	reduce using rule 2 (PLUS-1)

State 3:

	exp -> '(' . exp ')'	(Rule 9)

	'('	shift, and go to state 3
	NUM	shift, and go to state 1
	VAR	shift, and go to state 4

	exp	go to state 11

State 4:

	exp -> VAR .	(Rule 10)
	exp -> VAR . '=' exp	(Rule 11)

	'='	shift, and go to state 12

	$default	reduce using rule 10 (exp)

State 5:

	PLUS-1 -> PLUS-1 . ';' exp	(Rule 1)
	line -> PLUS-1 .	(Rule 3)

	';'	shift, and go to state 13

	$default	reduce using rule 3 (line)

State 6:

	$start -> line . $end	(Rule 0)

	$end	shift, and go to state 14

State 7:

	exp -> exp '-' . exp	(Rule 5)

	'('	shift, and go to state 3
	NUM	shift, and go to state 1
	VAR	shift, and go to state 4

	exp	go to state 15

State 8:

	exp -> exp '*' . exp	(Rule 6)

	'('	shift, and go to state 3
	NUM	shift, and go to state 1
	VAR	shift, and go to state 4

	exp	go to state 16

State 9:

	exp -> exp '+' . exp	(Rule 4)

	'('	shift, and go to state 3
	NUM	shift, and go to state 1
	VAR	shift, and go to state 4

	exp	go to state 17

State 10:

	exp -> exp '/' . exp	(Rule 7)

	'('	shift, and go to state 3
	NUM	shift, and go to state 1
	VAR	shift, and go to state 4

	exp	go to state 18

State 11:

	exp -> exp . '+' exp	(Rule 4)
	exp -> exp . '-' exp	(Rule 5)
	exp -> exp . '*' exp	(Rule 6)
	exp -> exp . '/' exp	(Rule 7)
	exp -> '(' exp . ')'	(Rule 9)

	')'	shift, and go to state 19
	'*'	shift, and go to state 8
	'+'	shift, and go to state 9
	'-'	shift, and go to state 7
	'/'	shift, and go to state 10

State 12:

	exp -> VAR '=' . exp	(Rule 11)

	'('	shift, and go to state 3
	NUM	shift, and go to state 1
	VAR	shift, and go to state 4

	exp	go to state 20

State 13:

	PLUS-1 -> PLUS-1 ';' . exp	(Rule 1)

	'('	shift, and go to state 3
	NUM	shift, and go to state 1
	VAR	shift, and go to state 4

	exp	go to state 21

State 14:

	$start -> line $end .	(Rule 0)

	$default	accept

State 15:

	exp -> exp . '+' exp	(Rule 4)
	exp -> exp . '-' exp	(Rule 5)
	exp -> exp '-' exp .	(Rule 5)
	exp -> exp . '*' exp	(Rule 6)
	exp -> exp . '/' exp	(Rule 7)

	'*'	shift, and go to state 8
	'/'	shift, and go to state 10

	$default	reduce using rule 5 (exp)

State 16:

	exp -> exp . '+' exp	(Rule 4)
	exp -> exp . '-' exp	(Rule 5)
	exp -> exp . '*' exp	(Rule 6)
	exp -> exp '*' exp .	(Rule 6)
	exp -> exp . '/' exp	(Rule 7)

	$default	reduce using rule 6 (exp)

State 17:

	exp -> exp . '+' exp	(Rule 4)
	exp -> exp '+' exp .	(Rule 4)
	exp -> exp . '-' exp	(Rule 5)
	exp -> exp . '*' exp	(Rule 6)
	exp -> exp . '/' exp	(Rule 7)

	'*'	shift, and go to state 8
	'/'	shift, and go to state 10

	$default	reduce using rule 4 (exp)

State 18:

	exp -> exp . '+' exp	(Rule 4)
	exp -> exp . '-' exp	(Rule 5)
	exp -> exp . '*' exp	(Rule 6)
	exp -> exp . '/' exp	(Rule 7)
	exp -> exp '/' exp .	(Rule 7)

	$default	reduce using rule 7 (exp)

State 19:

	exp -> '(' exp ')' .	(Rule 9)

	$default	reduce using rule 9 (exp)

State 20:

	exp -> exp . '+' exp	(Rule 4)
	exp -> exp . '-' exp	(Rule 5)
	exp -> exp . '*' exp	(Rule 6)
	exp -> exp . '/' exp	(Rule 7)
	exp -> VAR '=' exp .	(Rule 11)

	'*'	shift, and go to state 8
	'+'	shift, and go to state 9
	'-'	shift, and go to state 7
	'/'	shift, and go to state 10

	$default	reduce using rule 11 (exp)

State 21:

	PLUS-1 -> PLUS-1 ';' exp .	(Rule 1)
	exp -> exp . '+' exp	(Rule 4)
	exp -> exp . '-' exp	(Rule 5)
	exp -> exp . '*' exp	(Rule 6)
	exp -> exp . '/' exp	(Rule 7)

	'*'	shift, and go to state 8
	'+'	shift, and go to state 9
	'-'	shift, and go to state 7
	'/'	shift, and go to state 10

	$default	reduce using rule 1 (PLUS-1)


Summary:
--------
Number of rules         : 12
Number of terminals     : 11
Number of non-terminals : 4
Number of states        : 22
